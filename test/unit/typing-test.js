// Generated by CoffeeScript 1.3.3
(function() {
  var CoffeeScript, altKey, altKeyTracking, app, async, clearAndCheck, enterKey, executeCoffee, express, keysAndCheck, leakDetector, nullKey, preventDefault, returnKey, runTestWith, should, typeAndCheck, unbind, valueShouldEqual, wd;

  should = require('should');

  express = require('express');

  CoffeeScript = require('coffee-script');

  async = require('async');

  leakDetector = (require('../common/leak-detector'))();

  wd = require('../../lib/wd-zombie');

  altKey = wd.SPECIAL_KEYS['Alt'];

  nullKey = wd.SPECIAL_KEYS['NULL'];

  returnKey = wd.SPECIAL_KEYS['Return'];

  enterKey = wd.SPECIAL_KEYS['Enter'];

  executeCoffee = function(browser, script, done) {
    var scriptAsJs;
    scriptAsJs = CoffeeScript.compile(script, {
      bare: 'on'
    });
    return browser.execute(scriptAsJs, function(err) {
      should.not.exist(err);
      return done(null);
    });
  };

  valueShouldEqual = function(browser, element, expected, done) {
    return browser.getValue(element, function(err, res) {
      should.not.exist(err);
      res.should.equal(expected);
      return done(null);
    });
  };

  typeAndCheck = function(browser, _sel, chars, expected, done) {
    return browser.elementByCss(_sel, function(err, inputField) {
      should.not.exist(err);
      should.exist(inputField);
      return async.series([
        function(done) {
          return browser.type(inputField, chars, function(err) {
            should.not.exist(err);
            return done(null);
          });
        }, function(done) {
          return valueShouldEqual(browser, inputField, expected, done);
        }
      ], function(err) {
        should.not.exist(err);
        return done(null);
      });
    });
  };

  keysAndCheck = function(browser, _sel, chars, expected, done) {
    return browser.elementByCss(_sel, function(err, inputField) {
      should.not.exist(err);
      should.exist(inputField);
      return async.series([
        function(done) {
          return browser.moveTo(inputField, function(err) {
            should.not.exist(err);
            return done(null);
          });
        }, function(done) {
          return browser.keys(chars, function(err) {
            should.not.exist(err);
            return done(null);
          });
        }, function(done) {
          return valueShouldEqual(browser, inputField, expected, done);
        }
      ], function(err) {
        should.not.exist(err);
        return done(null);
      });
    });
  };

  clearAndCheck = function(browser, _sel, done) {
    return browser.elementByCss(_sel, function(err, inputField) {
      should.not.exist(err);
      should.exist(inputField);
      return async.series([
        function(done) {
          return browser.clear(inputField, function(err) {
            should.not.exist(err);
            return done(null);
          });
        }, function(done) {
          return valueShouldEqual(browser, inputField, "", done);
        }
      ], function(err) {
        should.not.exist(err);
        return done(null);
      });
    });
  };

  preventDefault = function(browser, _sel, eventType, done) {
    var script;
    script = "$('" + _sel + "')." + eventType + " (e) ->\n  e.preventDefault()";
    return executeCoffee(browser, script, done);
  };

  unbind = function(browser, _sel, eventType, done) {
    var script;
    script = "$('" + _sel + "').unbind '" + eventType + "' ";
    return executeCoffee(browser, script, done);
  };

  altKeyTracking = function(browser, _sel, done) {
    var script;
    script = "f = $('" + _sel + "')\nf.keydown (e) ->\n  if e.altKey\n    f.val 'altKey on'\n  else\n    f.val 'altKey off'\n  e.preventDefault()";
    return executeCoffee(browser, script, done);
  };

  runTestWith = function(remoteWdConfig, desired) {
    var browser, inputFieldSel, textareaFieldSel;
    browser = null;
    inputFieldSel = "#type input";
    textareaFieldSel = "#type textarea";
    return {
      "wd.remote": function(test) {
        browser = wd.remote(remoteWdConfig);
        browser.on("status", function(info) {
          return console.log("\u001b[36m%s\u001b[0m", info);
        });
        browser.on("command", function(meth, path) {
          return console.log(" > \u001b[33m%s\u001b[0m: %s", meth, path);
        });
        return test.done();
      },
      "init": function(test) {
        return browser.init(desired, function(err) {
          should.not.exist(err);
          return test.done();
        });
      },
      "get": function(test) {
        return browser.get("http://127.0.0.1:8181/type-test-page.html", function(err) {
          should.not.exist(err);
          return test.done();
        });
      },
      "input": {
        "type": {
          "1/ typing nothing": function(test) {
            return typeAndCheck(browser, inputFieldSel, "", "", (function(err) {
              return test.done(err);
            }));
          },
          "2/ typing []": function(test) {
            return typeAndCheck(browser, inputFieldSel, [], "", (function(err) {
              return test.done(err);
            }));
          },
          "3/ typing 'Hello'": function(test) {
            return typeAndCheck(browser, inputFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "4/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "5/ typing ['Hello']": function(test) {
            return typeAndCheck(browser, inputFieldSel, ['Hello'], 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "6/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "7/ typing ['Hello',' ','World','!']": function(test) {
            return typeAndCheck(browser, inputFieldSel, ['Hello', ' ', 'World', '!'], 'Hello World!', (function(err) {
              return test.done(err);
            }));
          },
          "8/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "9/ typing 'Hello\\n'": function(test) {
            return typeAndCheck(browser, inputFieldSel, 'Hello\n', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "10/ typing '\\r'": function(test) {
            return typeAndCheck(browser, inputFieldSel, '\r', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "11/ typing [returnKey]": function(test) {
            return typeAndCheck(browser, inputFieldSel, [returnKey], 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "13/ typing [enterKey]": function(test) {
            return typeAndCheck(browser, inputFieldSel, [enterKey], 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "14/ typing ' World!'": function(test) {
            return typeAndCheck(browser, inputFieldSel, ' World!', 'Hello World!', (function(err) {
              return test.done(err);
            }));
          },
          "15/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "16/ preventing default on keydown": function(test) {
            return preventDefault(browser, inputFieldSel, 'keydown', (function(err) {
              return test.done(err);
            }));
          },
          "17/ typing 'Hello'": function(test) {
            return typeAndCheck(browser, inputFieldSel, 'Hello', '', (function(err) {
              return test.done(err);
            }));
          },
          "18/ unbinding keydown": function(test) {
            return unbind(browser, inputFieldSel, 'keydown', (function(err) {
              return test.done(err);
            }));
          },
          "19/ typing 'Hello'": function(test) {
            return typeAndCheck(browser, inputFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "20/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "21/ preventing default on keypress": function(test) {
            return preventDefault(browser, inputFieldSel, 'keypress', (function(err) {
              return test.done(err);
            }));
          },
          "22/ typing 'Hello'": function(test) {
            return typeAndCheck(browser, inputFieldSel, 'Hello', '', (function(err) {
              return test.done(err);
            }));
          },
          "23/ unbinding keypress": function(test) {
            return unbind(browser, inputFieldSel, 'keypress', (function(err) {
              return test.done(err);
            }));
          },
          "24/ typing 'Hello'": function(test) {
            return typeAndCheck(browser, inputFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "25/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "26/ preventing default on keyup": function(test) {
            return preventDefault(browser, inputFieldSel, 'keyup', (function(err) {
              return test.done(err);
            }));
          },
          "27/ typing 'Hello'": function(test) {
            return typeAndCheck(browser, inputFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "28/ unbinding keypress": function(test) {
            return unbind(browser, inputFieldSel, 'keyup', (function(err) {
              return test.done(err);
            }));
          },
          "30/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "31/ adding alt key tracking": function(test) {
            return altKeyTracking(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "32/ typing ['a']": function(test) {
            return typeAndCheck(browser, inputFieldSel, ['a'], 'altKey off', (function(err) {
              return test.done(err);
            }));
          },
          "33/ typing [altKey,nullKey,'a']": function(test) {
            return typeAndCheck(browser, inputFieldSel, [altKey, nullKey, 'a'], 'altKey off', (function(err) {
              return test.done(err);
            }));
          },
          "34/ typing [altKey,'a']": function(test) {
            return typeAndCheck(browser, inputFieldSel, [altKey, 'a'], 'altKey on', (function(err) {
              return test.done(err);
            }));
          },
          "35/ typing ['a']": function(test) {
            return typeAndCheck(browser, inputFieldSel, ['a'], 'altKey off', (function(err) {
              return test.done(err);
            }));
          },
          "36/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "37/ typing [nullKey]": function(test) {
            return typeAndCheck(browser, inputFieldSel, [nullKey], '', (function(err) {
              return test.done(err);
            }));
          },
          "38/ typing ['a']": function(test) {
            return keysAndCheck(browser, inputFieldSel, ['a'], 'altKey off', (function(err) {
              return test.done(err);
            }));
          },
          "39/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "40/ unbinding keydown": function(test) {
            return unbind(browser, inputFieldSel, 'keydown', (function(err) {
              return test.done(err);
            }));
          }
        },
        "keys": {
          "1/ typing nothing": function(test) {
            return keysAndCheck(browser, inputFieldSel, "", "", (function(err) {
              return test.done(err);
            }));
          },
          "2/ typing []": function(test) {
            return keysAndCheck(browser, inputFieldSel, [], "", (function(err) {
              return test.done(err);
            }));
          },
          "3/ typing 'Hello'": function(test) {
            return keysAndCheck(browser, inputFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "4/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "5/ typing ['Hello']": function(test) {
            return keysAndCheck(browser, inputFieldSel, ['Hello'], 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "6/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "7/ typing ['Hello',' ','World','!']": function(test) {
            return keysAndCheck(browser, inputFieldSel, ['Hello', ' ', 'World', '!'], 'Hello World!', (function(err) {
              return test.done(err);
            }));
          },
          "8/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "9/ typing 'Hello\\n'": function(test) {
            return keysAndCheck(browser, inputFieldSel, 'Hello\n', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "10/ typing '\\r'": function(test) {
            return keysAndCheck(browser, inputFieldSel, '\r', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "11/ typing [returnKey]": function(test) {
            return keysAndCheck(browser, inputFieldSel, [returnKey], 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "13/ typing [enterKey]": function(test) {
            return keysAndCheck(browser, inputFieldSel, [enterKey], 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "14/ typing ' World!'": function(test) {
            return keysAndCheck(browser, inputFieldSel, ' World!', 'Hello World!', (function(err) {
              return test.done(err);
            }));
          },
          "15/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "16/ preventing default on keydown": function(test) {
            return preventDefault(browser, inputFieldSel, 'keydown', (function(err) {
              return test.done(err);
            }));
          },
          "17/ typing 'Hello'": function(test) {
            return keysAndCheck(browser, inputFieldSel, 'Hello', '', (function(err) {
              return test.done(err);
            }));
          },
          "18/ unbinding keydown": function(test) {
            return unbind(browser, inputFieldSel, 'keydown', (function(err) {
              return test.done(err);
            }));
          },
          "19/ typing 'Hello'": function(test) {
            return keysAndCheck(browser, inputFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "20/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "21/ preventing default on keypress": function(test) {
            return preventDefault(browser, inputFieldSel, 'keypress', (function(err) {
              return test.done(err);
            }));
          },
          "22/ typing 'Hello'": function(test) {
            return keysAndCheck(browser, inputFieldSel, 'Hello', '', (function(err) {
              return test.done(err);
            }));
          },
          "23/ unbinding keypress": function(test) {
            return unbind(browser, inputFieldSel, 'keypress', (function(err) {
              return test.done(err);
            }));
          },
          "24/ typing 'Hello'": function(test) {
            return keysAndCheck(browser, inputFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "25/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "26/ preventing default on keyup": function(test) {
            return preventDefault(browser, inputFieldSel, 'keyup', (function(err) {
              return test.done(err);
            }));
          },
          "27/ typing 'Hello'": function(test) {
            return keysAndCheck(browser, inputFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "28/ unbinding keypress": function(test) {
            return unbind(browser, inputFieldSel, 'keyup', (function(err) {
              return test.done(err);
            }));
          },
          "30/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "31/ adding alt key tracking": function(test) {
            return altKeyTracking(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "32/ typing ['a']": function(test) {
            return keysAndCheck(browser, inputFieldSel, ['a'], 'altKey off', (function(err) {
              return test.done(err);
            }));
          },
          "33/ typing [altKey,nullKey,'a']": function(test) {
            return keysAndCheck(browser, inputFieldSel, [altKey, nullKey, 'a'], 'altKey off', (function(err) {
              return test.done(err);
            }));
          },
          "34/ typing [altKey,'a']": function(test) {
            return keysAndCheck(browser, inputFieldSel, [altKey, 'a'], 'altKey on', (function(err) {
              return test.done(err);
            }));
          },
          "35/ typing ['a']": function(test) {
            return keysAndCheck(browser, inputFieldSel, ['a'], 'altKey on', (function(err) {
              return test.done(err);
            }));
          },
          "36/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "37/ typing [nullKey]": function(test) {
            return keysAndCheck(browser, inputFieldSel, [nullKey], '', (function(err) {
              return test.done(err);
            }));
          },
          "38/ typing ['a']": function(test) {
            return keysAndCheck(browser, inputFieldSel, ['a'], 'altKey off', (function(err) {
              return test.done(err);
            }));
          },
          "39/ clear": function(test) {
            return clearAndCheck(browser, inputFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "40/ unbinding keypress": function(test) {
            return unbind(browser, inputFieldSel, 'keypress', (function(err) {
              return test.done(err);
            }));
          }
        }
      },
      "textarea": {
        "type": {
          "1/ typing nothing": function(test) {
            return typeAndCheck(browser, textareaFieldSel, "", "", (function(err) {
              return test.done(err);
            }));
          },
          "2/ typing []": function(test) {
            return typeAndCheck(browser, textareaFieldSel, [], "", (function(err) {
              return test.done(err);
            }));
          },
          "3/ typing 'Hello'": function(test) {
            return typeAndCheck(browser, textareaFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "4/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "5/ typing ['Hello']": function(test) {
            return typeAndCheck(browser, textareaFieldSel, ['Hello'], 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "6/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "7/ typing ['Hello',' ','World','!']": function(test) {
            return typeAndCheck(browser, textareaFieldSel, ['Hello', ' ', 'World', '!'], 'Hello World!', (function(err) {
              return test.done(err);
            }));
          },
          "8/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "9/ typing 'Hello\\n'": function(test) {
            return typeAndCheck(browser, textareaFieldSel, 'Hello\n', 'Hello\n', (function(err) {
              return test.done(err);
            }));
          },
          "10/ typing '\\r'": function(test) {
            return typeAndCheck(browser, textareaFieldSel, '\r', 'Hello\n\r', (function(err) {
              return test.done(err);
            }));
          },
          "11/ typing [returnKey]": function(test) {
            return typeAndCheck(browser, textareaFieldSel, [returnKey], 'Hello\n\r\r', (function(err) {
              return test.done(err);
            }));
          },
          "13/ typing [enterKey]": function(test) {
            return typeAndCheck(browser, textareaFieldSel, [enterKey], 'Hello\n\r\r\r', (function(err) {
              return test.done(err);
            }));
          },
          "14/ typing ' World!'": function(test) {
            return typeAndCheck(browser, textareaFieldSel, ' World!', 'Hello\n\r\r\r World!', (function(err) {
              return test.done(err);
            }));
          },
          "15/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "16/ preventing default on keydown": function(test) {
            return preventDefault(browser, textareaFieldSel, 'keydown', (function(err) {
              return test.done(err);
            }));
          },
          "17/ typing 'Hello'": function(test) {
            return typeAndCheck(browser, textareaFieldSel, 'Hello', '', (function(err) {
              return test.done(err);
            }));
          },
          "18/ unbinding keydown": function(test) {
            return unbind(browser, textareaFieldSel, 'keydown', (function(err) {
              return test.done(err);
            }));
          },
          "19/ typing 'Hello'": function(test) {
            return typeAndCheck(browser, textareaFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "20/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "21/ preventing default on keypress": function(test) {
            return preventDefault(browser, textareaFieldSel, 'keypress', (function(err) {
              return test.done(err);
            }));
          },
          "22/ typing 'Hello'": function(test) {
            return typeAndCheck(browser, textareaFieldSel, 'Hello', '', (function(err) {
              return test.done(err);
            }));
          },
          "23/ unbinding keypress": function(test) {
            return unbind(browser, textareaFieldSel, 'keypress', (function(err) {
              return test.done(err);
            }));
          },
          "24/ typing 'Hello'": function(test) {
            return typeAndCheck(browser, textareaFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "25/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "26/ preventing default on keyup": function(test) {
            return preventDefault(browser, textareaFieldSel, 'keyup', (function(err) {
              return test.done(err);
            }));
          },
          "27/ typing 'Hello'": function(test) {
            return typeAndCheck(browser, textareaFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "28/ unbinding keypress": function(test) {
            return unbind(browser, textareaFieldSel, 'keyup', (function(err) {
              return test.done(err);
            }));
          },
          "30/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "31/ adding alt key tracking": function(test) {
            return altKeyTracking(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "32/ typing ['a']": function(test) {
            return typeAndCheck(browser, textareaFieldSel, ['a'], 'altKey off', (function(err) {
              return test.done(err);
            }));
          },
          "33/ typing [altKey,nullKey,'a']": function(test) {
            return typeAndCheck(browser, textareaFieldSel, [altKey, nullKey, 'a'], 'altKey off', (function(err) {
              return test.done(err);
            }));
          },
          "34/ typing [altKey,'a']": function(test) {
            return typeAndCheck(browser, textareaFieldSel, [altKey, 'a'], 'altKey on', (function(err) {
              return test.done(err);
            }));
          },
          "35/ typing ['a']": function(test) {
            return typeAndCheck(browser, textareaFieldSel, ['a'], 'altKey off', (function(err) {
              return test.done(err);
            }));
          },
          "36/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "37/ typing [nullKey]": function(test) {
            return typeAndCheck(browser, textareaFieldSel, [nullKey], '', (function(err) {
              return test.done(err);
            }));
          },
          "38/ typing ['a']": function(test) {
            return keysAndCheck(browser, textareaFieldSel, ['a'], 'altKey off', (function(err) {
              return test.done(err);
            }));
          },
          "39/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "40/ unbinding keydown": function(test) {
            return unbind(browser, textareaFieldSel, 'keydown', (function(err) {
              return test.done(err);
            }));
          }
        },
        "keys": {
          "1/ typing nothing": function(test) {
            return keysAndCheck(browser, textareaFieldSel, "", "", (function(err) {
              return test.done(err);
            }));
          },
          "2/ typing []": function(test) {
            return keysAndCheck(browser, textareaFieldSel, [], "", (function(err) {
              return test.done(err);
            }));
          },
          "3/ typing 'Hello'": function(test) {
            return keysAndCheck(browser, textareaFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "4/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "5/ typing ['Hello']": function(test) {
            return keysAndCheck(browser, textareaFieldSel, ['Hello'], 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "6/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "7/ typing ['Hello',' ','World','!']": function(test) {
            return keysAndCheck(browser, textareaFieldSel, ['Hello', ' ', 'World', '!'], 'Hello World!', (function(err) {
              return test.done(err);
            }));
          },
          "8/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "9/ typing 'Hello\\n'": function(test) {
            return keysAndCheck(browser, textareaFieldSel, 'Hello\n', 'Hello\n', (function(err) {
              return test.done(err);
            }));
          },
          "10/ typing '\\r'": function(test) {
            return keysAndCheck(browser, textareaFieldSel, '\r', 'Hello\n\r', (function(err) {
              return test.done(err);
            }));
          },
          "11/ typing [returnKey]": function(test) {
            return keysAndCheck(browser, textareaFieldSel, [returnKey], 'Hello\n\r\r', (function(err) {
              return test.done(err);
            }));
          },
          "13/ typing [enterKey]": function(test) {
            return keysAndCheck(browser, textareaFieldSel, [enterKey], 'Hello\n\r\r\r', (function(err) {
              return test.done(err);
            }));
          },
          "14/ typing ' World!'": function(test) {
            return keysAndCheck(browser, textareaFieldSel, ' World!', 'Hello\n\r\r\r World!', (function(err) {
              return test.done(err);
            }));
          },
          "15/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "16/ preventing default on keydown": function(test) {
            return preventDefault(browser, textareaFieldSel, 'keydown', (function(err) {
              return test.done(err);
            }));
          },
          "17/ typing 'Hello'": function(test) {
            return keysAndCheck(browser, textareaFieldSel, 'Hello', '', (function(err) {
              return test.done(err);
            }));
          },
          "18/ unbinding keydown": function(test) {
            return unbind(browser, textareaFieldSel, 'keydown', (function(err) {
              return test.done(err);
            }));
          },
          "19/ typing 'Hello'": function(test) {
            return keysAndCheck(browser, textareaFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "20/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "21/ preventing default on keypress": function(test) {
            return preventDefault(browser, textareaFieldSel, 'keypress', (function(err) {
              return test.done(err);
            }));
          },
          "22/ typing 'Hello'": function(test) {
            return keysAndCheck(browser, textareaFieldSel, 'Hello', '', (function(err) {
              return test.done(err);
            }));
          },
          "23/ unbinding keypress": function(test) {
            return unbind(browser, textareaFieldSel, 'keypress', (function(err) {
              return test.done(err);
            }));
          },
          "24/ typing 'Hello'": function(test) {
            return keysAndCheck(browser, textareaFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "25/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "26/ preventing default on keyup": function(test) {
            return preventDefault(browser, textareaFieldSel, 'keyup', (function(err) {
              return test.done(err);
            }));
          },
          "27/ typing 'Hello'": function(test) {
            return keysAndCheck(browser, textareaFieldSel, 'Hello', 'Hello', (function(err) {
              return test.done(err);
            }));
          },
          "28/ unbinding keypress": function(test) {
            return unbind(browser, textareaFieldSel, 'keyup', (function(err) {
              return test.done(err);
            }));
          },
          "30/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "31/ adding alt key tracking": function(test) {
            return altKeyTracking(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "32/ typing ['a']": function(test) {
            return keysAndCheck(browser, textareaFieldSel, ['a'], 'altKey off', (function(err) {
              return test.done(err);
            }));
          },
          "33/ typing [altKey,nullKey,'a']": function(test) {
            return keysAndCheck(browser, textareaFieldSel, [altKey, nullKey, 'a'], 'altKey off', (function(err) {
              return test.done(err);
            }));
          },
          "34/ typing [altKey,'a']": function(test) {
            return keysAndCheck(browser, textareaFieldSel, [altKey, 'a'], 'altKey on', (function(err) {
              return test.done(err);
            }));
          },
          "35/ typing ['a']": function(test) {
            return keysAndCheck(browser, textareaFieldSel, ['a'], 'altKey on', (function(err) {
              return test.done(err);
            }));
          },
          "36/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "37/ typing [nullKey]": function(test) {
            return keysAndCheck(browser, textareaFieldSel, [nullKey], '', (function(err) {
              return test.done(err);
            }));
          },
          "38/ typing ['a']": function(test) {
            return keysAndCheck(browser, textareaFieldSel, ['a'], 'altKey off', (function(err) {
              return test.done(err);
            }));
          },
          "39/ clear": function(test) {
            return clearAndCheck(browser, textareaFieldSel, (function(err) {
              return test.done(err);
            }));
          },
          "40/ unbinding keydown": function(test) {
            return unbind(browser, textareaFieldSel, 'keydown', (function(err) {
              return test.done(err);
            }));
          }
        }
      },
      "quit": function(test) {
        return browser.quit(function(err) {
          should.not.exist(err);
          return test.done();
        });
      }
    };
  };

  app = null;

  exports.wd = {
    "per method test": {
      'starting express': function(test) {
        app = express.createServer();
        app.use(express["static"](__dirname + '/assets'));
        app.listen(8181);
        return test.done();
      },
      zombie: runTestWith({}, {
        browserName: 'zombie'
      }),
      'stopping express': function(test) {
        app.close();
        return test.done();
      },
      'checking leaks': leakDetector.lookForLeaks
    }
  };

}).call(this);
